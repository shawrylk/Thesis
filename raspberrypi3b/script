
BPS_PATH=/home/shawry/Thesis/raspberrypi3b

bps_run()
{
	$BPS_PATH/bin/bpsRaspberryPi3B
}

bps_install_dependency()
{
	cd ~
	git clone git://git.drogon.net/wiringPi
	cd ~/wiringPi
	git pull origin
	cd ~/wiringPi
	./build
	cd ~
	sudo apt-get purge wolfram-engine -y
	sudo apt-get purge libreoffice* -y
	sudo apt-get remove x264 libx264-dev -y
	sudo apt-get clean -y
	sudo apt-get autoremove	 -y
	sudo apt-get update  -y
	sudo apt-get upgrade -y
	sudo apt-get upgrade --fix-missing -y

	sudo apt-get install build-essential checkinstall cmake pkg-config yasm -y
	sudo apt-get install git gfortran -y
	sudo apt-get install libjpeg8-dev libjasper-dev libpng12-dev -y
	
	# If you are using Ubuntu 16.04
	sudo apt-get install libtiff5-dev -y
	
	sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev -y
	sudo apt-get install libxine2-dev libv4l-dev -y
	sudo apt-get install libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev -y
	sudo apt-get install qt5-default libgtk2.0-dev libtbb-dev -y
	sudo apt-get install libatlas-base-dev -y
	sudo apt-get install libfaac-dev libmp3lame-dev libtheora-dev -y
	sudo apt-get install libvorbis-dev libxvidcore-dev -y
	sudo apt-get install libopencore-amrnb-dev libopencore-amrwb-dev -y
	sudo apt-get install x264 v4l-utils -y
	
	# Optional dependencies
	sudo apt-get install libprotobuf-dev protobuf-compiler -y
	sudo apt-get install libgoogle-glog-dev libgflags-dev -y
	sudo apt-get install libgphoto2-dev libeigen3-dev libhdf5-dev doxygen -y
	sudo apt-get install python-dev python-pip python3-dev python3-pip -y
	sudo -H pip2 install -U pip numpy 
	sudo -H pip3 install -U pip numpy 
	sudo pip2 install virtualenv virtualenvwrapper 
	sudo pip3 install virtualenv virtualenvwrapper 
	echo "# Virtual Environment Wrapper"  >> ~/.bashrc
	echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.bashrc
	source ~/.bashrc
	############ For Python 2 ############
	# create virtual environment
	mkvirtualenv facecourse-py2 -p python2
	workon facecourse-py2
	
	# now install python libraries within this virtual environment
	pip install numpy scipy matplotlib scikit-image scikit-learn ipython 
	
	# quit virtual environment
	deactivate
	######################################
	
	############ For Python 3 ############
	# create virtual environment
	mkvirtualenv facecourse-py3 -p python3
	workon facecourse-py3
	
	# now install python libraries within this virtual environment
	pip install numpy scipy matplotlib scikit-image scikit-learn ipython 
	
	# quit virtual environment
	deactivate
}

bps_clone_opencv()
{
	cd ~
	git clone https://github.com/opencv/opencv.git
	cd opencv
	git checkout $cvVersion
	cd ..
 
	git clone https://github.com/opencv/opencv_contrib.git
	cd opencv_contrib
	git checkout $cvVersion
	cd ..
	cd opencv
	mkdir build
	cd build
	cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D INSTALL_C_EXAMPLES=ON \
      -D INSTALL_PYTHON_EXAMPLES=ON \
      -D WITH_TBB=ON \
      -D WITH_V4L=ON \
      -D WITH_QT=ON \
      -D WITH_OPENGL=ON \
      -D OPENCV_EXTRA_MODULES_PATH= ~/opencv_contrib/modules \
-D PYTHON_EXECUTABLE=/usr/bin/python3.5 \
      -D PYTHON_INCLUDE=/usr/include/python3.5/ \
      -D PYTHON_LIBRARY=/usr/lib/python3.5/ \
      -D PYTHON_PACKAGES_PATH=/usr/local/lib/python3.5/dist-packages/ \
      -D PYTHON_NUMPY_INCLUDE_DIR=/usr/local/lib/python3.5/dist-packages/numpy/core/include/ \
      -D BUILD_EXAMPLES=ON ..
}

bps_build()
{
	mkdir -p $BPS_PATH/build/
	cd $BPS_PATH/build
	cmake $BPS_PATH/
	make -C $BPS_PATH/build/
	echo "Completed"
}

bps_clean()
{
	rm -rf $BPS_PATH/bin
	rm -rf $BPS_PATH/build
	rm -rf $BPS_PATH/build/CMakeFiles
	rm -f $BPS_PATH/build/CMakeCache.txt
	rm -f $BPS_PATH/build/cmake_install.cmake
	rm -f $BPS_PATH/build/Makefile
}

bps_install_opencv()
{
	cd ~/opencv/build
	ex -sc '%s/CONF_SWAPSIZE=100/CONF_SWAPSIZE=1024/g|x' /etc/dphys-swapfile

	sudo /etc/init.d/dphys-swapfile stop
	sudo /etc/init.d/dphys-swapfile start
	
	make -j3
	make install
	sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
	sudo ldconfig
	sudo mv /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-arm-linux-gnueabihf.so cv2.so
	
	ex -sc '%s/CONF_SWAPSIZE=1024/CONF_SWAPSIZE=100/g|x' /etc/dphys-swapfile

	sudo /etc/init.d/dphys-swapfile stop
	sudo /etc/init.d/dphys-swapfile start

	line='bcm2835-v4l2'
	file=/etc/modules-load.d/modules.conf
	
	if ! grep -q -x -F -e "$line" <"$file"; 
	then
	    echo "$line" >> "$file"
	fi
	############ For Python 2 ############
	cd ~/.virtualenvs/facecourse-py2/lib/python2.7/site-packages
	ln -s /usr/local/lib/python2.7/dist-packages/cv2.so cv2.so
	
	############ For Python 3 ############
	cd ~/.virtualenvs/facecourse-py3/lib/python3.6/site-packages
	ln -s /usr/local/lib/python3.6/dist-packages/cv2.cpython-36m-x86_64-linux-gnu.so cv2.so
	sudo rpi-update
}

while test ${#} -gt 0; do
    case "$1" in
        build)
            bps_build
            ;;
		clean)
			bps_clean
			;;
		install_dependency)
			bps_install_dependency
			;;
		run)
			bps_run
			;;
		install_opencv)
			bps_install_opencv
			;;
		clone_opencv)
			bps_clone_opencv
			;;
		install)
			bps_install_dependency
			bps_clone_opencv
			bps_install_opencv
			;;
		*)
            echo "Unknown command: $1"
            exit 1
    esac
    shift
done

exit 0

#git config --global user.email "shawry.lk@gmail.com"
#git config --global user.name "shawrylk"

