
BPS_PATH=/home/shawry/Thesis/raspberrypi3b

bps_run()
{
	$BPS_PATH/bin/bpsRaspberryPi3B
}

bps_install()
{
	line='bcm2835-v4l2'
	file=/etc/modules-load.d/modules.conf

	sudo apt-get purge wolfram-engine -y
	sudo apt-get purge libreoffice* -y
	sudo apt-get clean
	sudo apt-get autoremove	
	sudo apt-get update 
	sudo apt-get upgrade
	sudo apt-get upgrade --fix-missing

	sudo apt-get install build-essential cmake pkg-config -y
	sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev -y
	sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev -y
	sudo apt-get install libxvidcore-dev libx264-dev -y	
	sudo apt-get install libgtk2.0-dev libgtk-3-dev -y
	sudo apt-get install libatlas-base-dev gfortran -y

	sudo apt-get install python3 python3-setuptools python3-dev -y
	wget https://bootstrap.pypa.io/get-pip.py
	sudo python3 get-pip.py
	sudo pip3 install numpy
	cd ~
	wget -O opencv.zip https://github.com/Itseez/opencv/archive/3.4.0.zip
	unzip opencv.zip
	wget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.4.0.zip
	unzip opencv_contrib.zip
	cd opencv-3.4.0
	mkdir build
	cd build
	cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D BUILD_opencv_java=OFF \
	-D BUILD_opencv_python2=OFF \
	-D BUILD_opencv_python3=ON \
	-D PYTHON_DEFAULT_EXECUTABLE=$(which python3) \
	-D INSTALL_C_EXAMPLES=OFF \
	-D INSTALL_PYTHON_EXAMPLES=ON \
	-D BUILD_EXAMPLES=ON\
	-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.4.0/modules \
	-D WITH_CUDA=OFF \
	-D BUILD_TESTS=OFF \
	-D BUILD_PERF_TESTS= OFF ..

	ex -sc '%s/CONF_SWAPSIZE=100/CONF_SWAPSIZE=1024/g|x' /etc/dphys-swapfile

	sudo /etc/init.d/dphys-swapfile stop
	sudo /etc/init.d/dphys-swapfile start
	make -j4
	cd /usr/local/lib/python3.5/dist-packages/
	sudo mv /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-arm-linux-gnueabihf.so cv2.so
	cd ~
	rm opencv.zip opencv_contrib.zip

	ex -sc '%s/CONF_SWAPSIZE=1024/CONF_SWAPSIZE=100/g|x' /etc/dphys-swapfile

	sudo /etc/init.d/dphys-swapfile stop
	sudo /etc/init.d/dphys-swapfile start


	if ! grep -q -x -F -e "$line" <"$file"; 
	then
	    echo "$line" >> "$file"
	fi
}

bps_build()
{
	mkdir -p $BPS_PATH/build/
	cd $BPS_PATH/build
	cmake $BPS_PATH/
	make -C $BPS_PATH/build/
	echo "Completed"
}

bps_clean()
{
	rm -rf $BPS_PATH/bin
	rm -rf $BPS_PATH/build
	rm -rf $BPS_PATH/build/CMakeFiles
	rm -f $BPS_PATH/build/CMakeCache.txt
	rm -f $BPS_PATH/build/cmake_install.cmake
	rm -f $BPS_PATH/build/Makefile
}

while test ${#} -gt 0; do
    case "$1" in
        build)
            bps_build
            ;;
		clean)
			bps_clean
			;;
		install)
			bps_install
			;;
		run)
			bps_run
			;;
		*)
            echo "Unknown command: $1"
            osaf_help
            exit 1
    esac
    shift
done

exit 0

#git config --global user.email "shawry.lk@gmail.com"
#git config --global user.name "shawrylk"